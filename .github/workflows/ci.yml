name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  # Detect which files have changed to determine if we need to run CI
  changes:
    name: Detect Changes
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
    outputs:
      app: ${{ steps.filter.outputs.app }}
    steps:
      - uses: actions/checkout@v4

      - uses: dorny/paths-filter@v3
        id: filter
        with:
          base: main
          filters: |
            app:
              - 'src/**'
              - 'public/**'
              - 'package*.json'
              - 'tsconfig*.json'
              - 'vite.config.ts'
              - 'vitest.config.ts'
              - 'postcss.config.js'
              - 'tailwind.config.js'
              - 'eslint.config.js'
              - 'index.html'
              - 'components.json'
              - '.github/workflows/ci.yml'

  test:
    name: Test and Build
    runs-on: ubuntu-latest
    needs: changes
    if: needs.changes.outputs.app == 'true'

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run type check
      run: npm run typecheck

    - name: Run lint
      run: npm run lint

    - name: Run tests
      run: npm test

    - name: Build
      run: npm run build

    - name: Upload build artifacts
      if: matrix.node-version == '20.x'
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/

  # Summary job that provides a single status check for branch protection
  ci-summary:
    name: CI Summary
    runs-on: ubuntu-latest
    needs: [changes, test]
    if: always()

    steps:
      - name: Check CI Results
        run: |
          echo "Checking CI results..."
          echo "App changes: ${{ needs.changes.outputs.app }}"

          # Check if any tests were supposed to run
          if [[ "${{ needs.changes.outputs.app }}" == "true" ]]; then
            echo "Tests were executed. Checking results..."
            
            # Check if any job failed
            if [[ "${{ contains(needs.*.result, 'failure') }}" == "true" ]]; then
              echo "❌ CI failed: One or more tests failed"
              exit 1
            fi
            
            # Check if any job was cancelled
            if [[ "${{ contains(needs.*.result, 'cancelled') }}" == "true" ]]; then
              echo "⚠️ CI cancelled: One or more jobs were cancelled"
              exit 1
            fi
            
            echo "✅ All tests passed!"
          else
            echo "✅ No code changes detected - skipping tests"
          fi

          echo "CI completed successfully!"