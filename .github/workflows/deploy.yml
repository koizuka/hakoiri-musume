name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "github-pages-deployment"
  cancel-in-progress: false

jobs:
  # Detect which files have changed to determine if we need to deploy
  changes:
    name: Detect Changes
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
    outputs:
      app: ${{ steps.filter.outputs.app }}
    steps:
      - uses: actions/checkout@v5

      - uses: dorny/paths-filter@v3
        id: filter
        with:
          base: main
          filters: |
            app:
              - 'src/**'
              - 'public/**'
              - 'package*.json'
              - 'tsconfig*.json'
              - 'vite.config.ts'
              - 'vitest.config.ts'
              - 'postcss.config.js'
              - 'tailwind.config.js'
              - 'eslint.config.js'
              - 'index.html'
              - 'components.json'
              - '.github/workflows/deploy.yml'

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: changes
    if: needs.changes.outputs.app == 'true' || github.event_name == 'workflow_dispatch'
    steps:
    - name: Checkout
      uses: actions/checkout@v5

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run type check
      run: npm run typecheck

    - name: Run lint
      run: npm run lint

    - name: Run tests
      run: npm test

    - name: Build
      run: npm run build

    - name: Setup Pages
      uses: actions/configure-pages@v5

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v4
      with:
        path: './dist'

  deploy:
    name: Deploy
    environment:
      name: github-pages
      url: https://koizuka.github.io/hakoiri-musume/
    runs-on: ubuntu-latest
    needs: [changes, build]
    if: needs.changes.outputs.app == 'true' || github.event_name == 'workflow_dispatch'
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v5
      with:
        name: github-pages
        path: dist-artifact
    
    - name: Extract build artifacts
      run: |
        cd dist-artifact
        tar -xf artifact.tar
        rm artifact.tar
        
    - name: Checkout gh-pages branch
      uses: actions/checkout@v5
      with:
        ref: gh-pages
        path: gh-pages
        
    - name: Deploy to root of gh-pages
      run: |
        # Remove existing files at root (but keep pr directory)
        cd gh-pages
        find . -maxdepth 1 -type f -delete
        find . -maxdepth 1 -type d -name "pr" -prune -o -type d ! -name "." ! -name ".git" -exec rm -rf {} + 2>/dev/null || true
        
        # Copy new build files to root
        cp -r ../dist-artifact/* .
        
        # Commit and push
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git add .
        
        # Check if there are any changes to commit
        if git diff --staged --quiet; then
          echo "No changes to deploy - site is already up to date"
        else
          git commit -m "Deploy production build from main branch"
          git push
        fi